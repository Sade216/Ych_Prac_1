<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAOwAAADsAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbqjiLHCn
        44BvpuPXWYjE1ViJw4BXi8UsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABxpuErcKfjgG+m
        49Vvp+P/b6fj/2+n4/9YicT/WInE/1iJxP9YicTeWInDkVmIxDwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHGm4Stwp+OAb6fi1m+n
        4/9vp+P/b6fj/2+n4/9vp+P/b6fj/1iJxP9YicT/WInE/1iJxP9YicT/WInE/1iJxN5YicORWYjEPAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcabhK3Cn44Bvp+PXb6fj/2+n
        4/9vp+P/b6fj/2+n4/9vp+P/b6fj/2+n4/9vp+P/WInE/1iJxP9YicT/WInE/1iJxP9YicT/WInE/1iJ
        xP9YicT/WInE31iJw5FZiMQ8AP//AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG+m5Gdvp+P/b6fj/2+n
        4/9vp+P/b6fj/2+n4/9vp+P/b6fj/2+n4/9vp+P/b6fj/2+n4/9YicT/WInE/1iJxP9YicT/WInE/1iJ
        xP9YicT/WInE/1iJxP9YicT/WInE/1iJxP9ZiMRnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbqbjbW+n
        4/9vp+P/b6fj/2+n4/9vp+P/b6fj/2+n4/9vp+P/b6fj/2+n4/9vp+P/b6fj/1iJxP9YicT/WInE/1iJ
        xP9YicT/WInE/1iJxP9YicT/WInE/1iJxP9YicT/WInE/1mKxW0AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABupuNtb6fj/2+n4/9vp+P/b6fj/2+n4/9vp+P/b6fj/2+n4/9vp+P/b6fj/2+n4/9vp+P/WInE/1iJ
        xP9YicT/WInE/1iJxP9YicT/WInE/1iJxP9YicT/WInE/1iJxP9YicT/WYrFbQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAG6m421vp+P/b6fj/2+n4/9vp+P/b6fj/2+n4/9vp+P/b6fj/2+n4/9vp+P/b6fj/2+n
        4/9YicT/WInE/1iJxP9YicT/WInE/1iJxP9YicT/WInE/1iJxP9YicT/WInE/1iJxP9ZisVtAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAbqbjbW+n4/9vp+P/b6fj/2+n4/9vp+P/b6fj/2+n4/9wqOT/davl/2+n
        4/9vp+P/b6fj/1iJxP9YicT/WInE/1qMx/9ZisT/WInE/1iJxP9YicT/WInE/1iJxP9YicT/WInE/1mK
        xW0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABupuNtb6fj/2+n4/9vp+P/b6fj/3Cn4/98sef/jr/s/6HN
        8f+ezPH/canj/2+n4/9vp+P/WInE/1iJxP9ZisX/bKPf/26m4f9nnNf/X5LO/1mKxP9YicT/WInE/1iJ
        xP9YicT/WYrFbQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG6m421vp+P/cKfj/3yx5/+Ov+z/oM7x/6XR
        8v+l0fL/pdHy/6XR8v+Mvev/b6fj/2+n4/9YicT/WInE/2WZ1f9vp+P/b6fj/2+n4/9vp+P/bqbh/2ec
        1/9fks7/WYrF/1iJxP9ZisVtAAAAAAAAAAAAAAAAAAAAAAAAAAC22/8HirzrmZHC7f+iz/H/pdHy/6XR
        8v+l0fL/pdHy/6XR8v+l0fL/pdHy/6TR8v96r+X/b6fj/1iJxP9cjsn/b6fj/2+n4/9vp+P/b6fj/2+n
        4/9vp+P/b6fj/2+n4/9upeL/aJ7Z/2ab1qN0ougLAAAAAAAAAACm0fJNpdDzpKXS8vGl0fL/pdHy/6XR
        8v+l0fL/pdHy/6XR8v+l0fL/pdHy/6XR8v+l0fL/pdHy/5nI7/9vqOP/WInE/2qh3P9vp+P/b6fj/2+n
        4/9vp+P/b6fj/2+n4/9vp+P/b6fj/2+n4/9vp+P/b6fj/2+n4/FupuOkcablTaTS8pil0fL/pdHy/6XR
        8v+l0fL/pdHy/6XR8v+l0fL/pdHy/6XR8v+l0fL/pdHy/6XR8v+l0fL/pdHy/4a56f9hldH/b6fj/2+n
        4/9vp+P/b6fj/2+n4/9vp+P/b6fj/2+n4/9vp+P/b6fj/2+n4/9vp+P/b6fj/2+n4/9vp+KXn8/vEKXS
        8ual0fL/pdHy/6XR8v+l0fL/pdHy/6XR8v+l0fL/pdHy/6XR8v+l0fL/pdHy/6XR8v+gzfD/jL3r/2SZ
        1P9tpOD/b6fj/2+n4/9vp+P/b6fj/2+n4/9vp+P/b6fj/2+n4/9vp+P/b6fj/2+n4/9vp+P/b6fj5nCf
        3xAAAAAAptDzVqXR8v+l0fL/pdHy/6XR8v+l0fL/pdHy/6XR8v+l0fL/pdHy/6HO8f+Rwu3/f7Tn/3Cn
        4/9vp+P/WInE/1iJxP9dkMv/ZZrW/22k4P9vp+P/b6fj/2+n4/9vp+P/b6fj/2+n4/9vp+P/b6fj/2+n
        4/9vqORVAAAAAAAAAAAAAAAApdHysqXR8v+l0fL/pdHy/6XR8v+l0fL/oc7x/5HC7f9/tOf/cKfj/2+n
        4/9vp+P/b6fj/2+n4/9YicT/WInE/1iJxP9YicT/WInE/12Qy/9lmtb/bKTg/2+n4/9vp+P/b6fj/2+n
        4/9vp+P/b6fjtgAAAAAAAAAAAAAAAAAAAACi1e4eo9Dz+KXR8v+fzPD/jr/s/32y5/9wp+P/b6fj/2+n
        4/9vp+P/b6fj/2+n4/9vp+P/b6fj/1iJxP9YicT/WInE/1iJxP9YicT/WInE/1iJxP9YicT/XI/K/2SY
        1P9so9//b6fj/2+m4vlsquAhAAAAAAAAAAAAAAAAAAAAAAAAAACRwex4frPn4HCn4/9vp+P/b6fj/2+n
        4/9vp+P/b6fj/2+n4/9vp+P/b6fj/2+n4/9vp+P/WInE/1iJxP9YicT/WInE/1iJxP9YicT/WInE/1iJ
        xP9YicT/WInE/1iJxP9dkszgZpvXeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcabhK3Cn
        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
        eP/+Hnh//D58P/w+fD/8fn4//v5/f//+f/8=
</value>
  </data>
</root>